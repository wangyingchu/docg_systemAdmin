{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(event.point);\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\t\t\t\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor(){\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\t\t\t\n\t\t}\t\t\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif((event.originalEvent as any).button == 2){\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tthis._updateFinals(start, end);\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\t\t\tconst utc = this._root.utc;\n\t\t\t\t\tconst timezone = this._root.timezone\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\tstartTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\tvalue = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tlet date = new Date(value);\n\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\tif (adjustPosition !== false) {\n\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t}\n\n\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tlet len = Math.round(this._dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif (this._dates[0]) {\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = this._dates.length; i < len; i++) {\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousValue = value;\r\n\t\t\t\tvalue += $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n\t\t\t\tvalue = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\tif (value == previousValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?:IDisposer;\n\tpublic _posYDp?:IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif(this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")){\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","Math","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","_handleAxisSelection","force","indexOf","setRaw","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","min","_fy","reverse","prevBottom","bounds","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","strokeDasharray","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","_handleLineBlur","document","_handleLineMove","keyCode","dir","increment","focused","getCellWidthPosition","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","_dispose","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","interactive","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","once","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","labels","ticks","axisFills","_updateGhost","localBounds","gWidth","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisLabel","AxisLabelRadial","AxisRenderer","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_dataGrouped","_handleRangeChange","mainDataSetId","setDataSet","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","firstDay","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","nextGridUnit","format","previousValue","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","NaN","adjustPosition","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","positionToDate","dateToPosition","GaplessDateAxis","valueFields","dates","_dates","found","_updateAllDates","len","itemValue","valueToIndex","findex","floor","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","selectedItems","startDate","previousPosition","minDifference","realValue","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","stepPower","decCount","fillEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","_positionX","_positionY","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","mainDataItems","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","AxisBullet","Entity","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","_new","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}