{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t * \n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t * \n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\t\t\t\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: IPointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t * \n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif(this.get(\"opposite\")){\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tvar w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tvar maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tthis._bullets = {};\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * 1.05);\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05)\n\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05)\n\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstartTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\n\t\t\t\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst timeZone = this._root.timezone;\n\t\t\tconst firstDayOfWeek = this._root.locale.firstDayOfWeek;\n\t\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\tif (timeZone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\n\t\t\t\tlet newValue = value + duration * location;\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(newValue), firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tlet date = new Date(value);\n\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\treturn this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif (this._dates[0]) {\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = this._dates.length; i < len; i++) {\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousValue = value;\r\n\t\t\t\tvalue += $time.getDuration(gridInterval.timeUnit, gridInterval.count * 1.05);\r\n\t\t\t\tvalue = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\tif (value == previousValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tthis._bullets = {};\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker();\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tthis._bullets = {};\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","series","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","undefined","_isPanning","_movePoints","_handlePinch","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","moveThreshold","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","userPositionX","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","adapters","disable","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_updatePositions","labels","ticks","axisFills","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_clearDirty","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Axis","AxisLabel","AxisLabelRadial","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","_clear","AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","toggleVisibility","bulletPosition","previousBullet","_bullets","previousSprite","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","y0","y1","AxisRendererY","AxisTick","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","_dataGrouped","_groupSeriesData","_handleRangeChange","setDataSet","_seriesDataGrouped","_dataSets","baseAxis","_valueYFields","_valueXFields","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","selectionMin","selectionMax","modifiedDifference","baseDuration","getGroupInterval","current","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","gridCount","_strictMode","_intervalDuration","id","intervals","nextGridUnit","previousValue","format","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_updateGhost","_deltaMinMax","startTime","endTime","_date","fields","open","close","_updateDates","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemPositionX","getDataItemPositionY","positionToValue","timeZone","NaN","fieldName","result","diValue","first","second","nextItem","value1","zoomToValues","DateAxis","valueFields","dates","_dates","found","len","itemValue","findex","floor","_seriesValuesDirty","_updateAllDates","valueToIndex","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","startDate","previousPosition","minDifference","realValue","GaplessDateAxis","isPrivateDirty","Grid","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_prepareAxisItems","_updateAxisRanges","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_formatText","stepPower","decCount","fillEndPosition","updateGrid","hasTag","updateTick","updateFill","updateBullet","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_fixMin","_fixMax","_getDelta","strictMinMaxSelection","strict","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","_makeGraphics","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","_draw","Candlestick","mainContainer","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","getRaw","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","CandlestickSeries","ColumnSeries","strokes","fills","_fillGenerator","p","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","marker","interactive","disabledColor","bulletFunction","LineSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","stackedToSeries","_afterDataChange","_aggregatesCalculated","_shouldShowBullet","_positionX","_positionY","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_position","resetExtremes","XYSeries","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","_itemMap","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","axisPositionToIndex","seriesDataItem","zoomToIndexes","previousIndex","previousUnitValue","selectedItems","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","CategoryDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","lY","hX","OHLC","List","Template","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}